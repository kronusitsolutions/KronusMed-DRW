services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: medical-clinic-app:latest
    container_name: medical_clinic_app_prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - .env.local
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
      - INITIAL_ADMIN_EMAIL=${INITIAL_ADMIN_EMAIL}
      - INITIAL_ADMIN_PASSWORD=${INITIAL_ADMIN_PASSWORD}
      - INITIAL_ADMIN_NAME=${INITIAL_ADMIN_NAME}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - medical_network
  postgres:
    image: postgres:15-alpine
    container_name: medical_clinic_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: medical_clinic
      POSTGRES_USER: medical_user
      POSTGRES_PASSWORD: medical_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medical_user -d medical_clinic"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - medical_network

  # Opcional: pgAdmin para gesti√≥n visual (solo desarrollo)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: medical_clinic_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@clinica.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - medical_network
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  medical_network:
    driver: bridge
